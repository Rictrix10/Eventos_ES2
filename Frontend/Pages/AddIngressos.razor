@page "/registar-ingressos/{EventId}"
@using System.ComponentModel.DataAnnotations
@using BusinessLogic.Entities
@using BusinessLogic.Models
@using Microsoft.AspNetCore.Components
@using Blazorise.Bootstrap
@using BusinessLogic.Entities
@using BusinessLogic.Models
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<PageTitle>Registar Ingressos</PageTitle>

<h1>Registar Ingressos</h1>

<EditForm Model="@addEventoIngressoViewModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="tipo_ingresso">Tipo de Ingresso:</label>
        <InputText id="tipo_ingresso" class="form-control" @bind-Value="@addEventoIngressoViewModel.TipoIngresso" />
        <ValidationMessage For="@(() => addEventoIngressoViewModel.TipoIngresso)" />
    </div>

    <div class="form-group">
        <label for="preco">Preço:</label>
        <InputText id="preco" class="form-control" @bind-Value="@addEventoIngressoViewModel.PrecoString" />
        <ValidationMessage For="@(() => addEventoIngressoViewModel.PrecoString)" />
    </div>

    <div class="form-group">
        <label for="quantidade">Quantidade:</label>
        <InputText id="quantidade" class="form-control" @bind-Value="@addEventoIngressoViewModel.QuantidadeString" />
        <ValidationMessage For="@(() => addEventoIngressoViewModel.QuantidadeString)" />
    </div>

    <button type="submit" class="btn btn-primary" disabled="@isSubmitting">Registar</button>
    <button class="btn btn-secondary" @onclick="GoBack">Voltar</button>
</EditForm>

@code {
    [Parameter]
    public string EventId { get; set; }

    private int eventId;
    private int quantidade;
    private decimal preco;
    private bool isSubmitting = false;

    private AddEventoIngressoViewModel addEventoIngressoViewModel = new AddEventoIngressoViewModel();

    protected override void OnInitialized()
    {
        eventId = Convert.ToInt32(EventId);
        addEventoIngressoViewModel.IdEvento = eventId;
        base.OnInitialized();
    }

    private async Task HandleValidSubmit()
    {
        if (isSubmitting)
        {
            return;
        }

        try
        {
            isSubmitting = true;
            StateHasChanged();

            var response = await HttpClient.PostAsJsonAsync("http://localhost:5052/api/EventosIngressos", addEventoIngressoViewModel);
            response.EnsureSuccessStatusCode();

            var evento = await response.Content.ReadFromJsonAsync<EventoIngresso>();

            Console.WriteLine($"Tipo: {addEventoIngressoViewModel.TipoIngresso}");
            Console.WriteLine($"Preço: {addEventoIngressoViewModel.Preco}");
            Console.WriteLine($"Quantidade: {addEventoIngressoViewModel.Quantidade}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            isSubmitting = false;
            StateHasChanged();
        }
    }
    
    private void GoBack()
    {
        NavigationManager.NavigateTo("javascript:history.back()");
    }
}

