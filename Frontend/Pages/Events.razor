@page "/events/{idUtilizador}/{nome}"
@using BusinessLogic.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Eventos</PageTitle>

<h1>Eventos</h1>

<p>This component demonstrates fetching data from the server.</p>

<div class="mb-3">
    <button class="btn btn-primary" @onclick="AddNewEvent">Adicionar Evento</button>
</div>


@if (events == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table style="width: 100%">
        <tr>
            <th>Nome</th>
            <th>Data</th>
            <th>Hora</th>
            <th>Local</th>
            <th>Descrição</th>
            <th>Capacidade Máxima</th>
            <th>Categoria</th>

            <th></th> <!-- Column for Register/Edit buttons -->
            <th></th> <!-- Column for Add Activities button -->
            <th></th> <!-- Column for Add Tickets button -->
        </tr>
        <tbody>
        @foreach (var evt in events)
        {
            <tr>
                <td>@evt.Nome</td>
                <td>@evt.Data</td>
                <td>@evt.Hora</td>
                <td>@evt.Local</td>
                <td>@evt.Descricao</td>
                <td>@evt.Capacidademax</td>
                <td>@evt.Categoria</td>

                <td>
                    <button class="btn btn-info" @onclick="() => EditEvent(evt.IdEvento)">Editar Evento</button>
                </td>
                <td>
                    <button class="btn btn-info" @onclick="() => AddActivities(evt.IdEvento)">Adicionar Atividades</button>
                </td>
                <td>
                    <button class="btn btn-info" @onclick="() => AddTickets(evt.IdEvento)">Adicionar Ingressos</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code
{
    [Parameter]
    public string IdUtilizador { get; set; }

    [Parameter]
    public string Nome { get; set; }

    private int idUtilizador;
    private string nome;

    private EventoViewModel[]? events;

    protected override async Task OnInitializedAsync()
    {
        idUtilizador = Convert.ToInt32(IdUtilizador);
        nome = Nome;

        events = await Http.GetFromJsonAsync<EventoViewModel[]>($"http://localhost:5052/api/Events");
    }

    private void EditEvent(int eventId)
    {
        // Logic to edit the event
        Console.WriteLine($"Editing event with ID: {eventId}");
    }

    private void AddActivities(int eventId)
    {
        // Logic to add activities to the event
        Console.WriteLine($"Adding activities to event with ID: {eventId}");
    }

    private void AddTickets(int eventId)
    {
        // Logic to add tickets to the event
        Console.WriteLine($"Adding tickets to event with ID: {eventId}");
    }

    private void AddNewEvent()
    {
        var url = $"/addevent/{idUtilizador}/{Uri.EscapeDataString(nome)}";
        NavigationManager.NavigateTo(url);
    }
}
