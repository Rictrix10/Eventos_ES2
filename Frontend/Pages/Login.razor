@page "/login"
@using System.ComponentModel.DataAnnotations
@using System.Net
@using BusinessLogic.Models
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
@inject HttpClient Http



<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="@loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="@loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>
    
    <div class="form-group">
        <p>Não tem conta? <a href="/register">Criar conta</a></p>
    </div>
    
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private UtilizadorViewModel[]? utilizadores;

    protected override async Task OnInitializedAsync()
    {
        utilizadores = await Http.GetFromJsonAsync<UtilizadorViewModel[]>("http://localhost:5052/api/Utilizadores");
    }

    private void HandleValidSubmit()
    {
    // Verificar as credenciais
        var user = utilizadores.FirstOrDefault(u => u.VerifyCredentials(loginModel.Username, loginModel.Password));

        if (user != null)
        {
    // Redirecionar para a página de sucesso após o login
            NavigationManager.NavigateTo("/");
            
    // Exibir os dados do login na console
            Console.WriteLine($"Login successful: Username={loginModel.Username}, Password={loginModel.Password}");
        }
        else
        {
    // Exibir uma mensagem de erro ou tomar outras ações necessárias
    // Por exemplo, definir uma propriedade de erro para exibi-la na tela
    // loginModel.ErrorMessage = "Credenciais inválidas";
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "O nome de usuário é obrigatório.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "A senha é obrigatória.")]
        public string Password { get; set; }
    }
}
