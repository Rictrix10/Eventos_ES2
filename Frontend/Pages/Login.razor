@page "/login"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="@loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="@loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private void HandleValidSubmit()
    {
    // Lógica para processar o login aqui
    // Exemplo básico: verificar as credenciais e redirecionar para outra página
        if (loginModel.Username == "admin" && loginModel.Password == "password")
        {
    // Redirecionar para a página de sucesso após o login
            NavigationManager.NavigateTo("/success");
        }
        else
        {
    // Exibir uma mensagem de erro ou tomar outras ações necessárias
    // Por exemplo, definir uma propriedade de erro para exibi-la na tela
    // loginModel.ErrorMessage = "Credenciais inválidas";
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "O nome de usuário é obrigatório.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "A senha é obrigatória.")]
        public string Password { get; set; }
    }
}