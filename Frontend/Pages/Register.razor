@page "/register"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" class="form-control" @bind-Value="@registerModel.Name" />
        <ValidationMessage For="@(() => registerModel.Name)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" @bind-Value="@registerModel.Password" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="@registerModel.Email" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="form-group">
        <label for="userType">User Type:</label>
        <InputText id="userType" class="form-control" @bind-Value="@registerModel.UserType" />
        <ValidationMessage For="@(() => registerModel.UserType)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private void HandleValidSubmit()
    {
        // Lógica para processar o registro aqui
        // Exemplo básico: criar uma conta de usuário com os dados fornecidos
        // e redirecionar para a página de login

        // Faça o que for necessário para salvar o novo usuário no banco de dados
        // por exemplo, chamar um serviço para lidar com a persistência

        // Após o registro, redirecionar para a página de login
        NavigationManager.NavigateTo("/login");
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "O nome é obrigatório.")]
        public string Name { get; set; }

        [Required(ErrorMessage = "A senha é obrigatória.")]
        [MinLength(6, ErrorMessage = "A senha deve ter pelo menos 6 caracteres.")]
        public string Password { get; set; }

        [Required(ErrorMessage = "O email é obrigatório.")]
        [EmailAddress(ErrorMessage = "O email fornecido não é válido.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "O tipo de usuário é obrigatório.")]
        public string UserType { get; set; }
    }
}
