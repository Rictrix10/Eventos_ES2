@page "/login"
@using BusinessLogic.Models
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="@loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" class="form-control" type="password" @bind-Value="@loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    @if (!string.IsNullOrEmpty(loginModel.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @loginModel.ErrorMessage
        </div>
    }

    <div class="form-group">
        <p>Não tem conta? <a href="/register">Criar conta</a></p>
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginViewModel loginModel = new LoginViewModel();
    private UtilizadorViewModel[]? utilizadores;

    protected override async Task OnInitializedAsync()
    {
        utilizadores = await Http.GetFromJsonAsync<UtilizadorViewModel[]>("http://localhost:5052/api/Utilizadores");
    }

    private void HandleValidSubmit()
    {
        // Verificar as credenciais
        var user = utilizadores.FirstOrDefault(u => u.VerifyCredentials(loginModel.Username, loginModel.Password));

        if (user != null)
        {
            int idUtilizador = user.IdUtilizador;
            string nome = user.Nome;
            string tipo = user.Tipo;

            string url = "";

            if (tipo == "Participante")
            {
                url = $"/home-par/{idUtilizador}/{Uri.EscapeDataString(nome)}";
            }
            else if (tipo == "Organizador")
            {
                url = $"/home-org/{idUtilizador}/{Uri.EscapeDataString(nome)}";
            }
            else if (tipo == "Admin")
            {
                url = $"/home-admin/{idUtilizador}/{Uri.EscapeDataString(nome)}";
            }
            else if (tipo == "UserManager")
            {
                url = $"/home-usermanager/{idUtilizador}/{Uri.EscapeDataString(nome)}";
            }

            NavigationManager.NavigateTo(url);

            // Exibir os dados do login na console
            Console.WriteLine($"Login successful: Username={loginModel.Username}, Password={loginModel.Password}");
            Console.WriteLine($"IdUtilizador: {idUtilizador}");
            Console.WriteLine($"Nome: {nome}");
            Console.WriteLine($"Tipo: {tipo}");
        }
        else
        {
            // As credenciais são inválidas, definir a mensagem de erro
            loginModel.ErrorMessage = "Credenciais inválidas";
        }
    }
}
