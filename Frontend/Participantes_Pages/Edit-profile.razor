@page "/edit-profile"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager

<h3>Edit Profile</h3>

<EditForm Model="@profileModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="fullName">Full Name:</label>
        <InputText id="fullName" class="form-control" @bind-Value="@profileModel.FullName" />
        <ValidationMessage For="@(() => profileModel.FullName)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="@profileModel.Email" />
        <ValidationMessage For="@(() => profileModel.Email)" />
    </div>

    <div class="form-group">
        <label for="phoneNumber">Phone Number:</label>
        <InputText id="phoneNumber" class="form-control" @bind-Value="@profileModel.PhoneNumber" />
        <ValidationMessage For="@(() => profileModel.PhoneNumber)" />
    </div>

    <button type="submit" class="btn btn-primary">Save Changes</button>
</EditForm>

@code {
    private ProfileModel profileModel = new ProfileModel();

    private void HandleValidSubmit()
    {
    // Lógica para salvar as alterações no perfil do participante
    // Exemplo básico: chamar um serviço para lidar com a persistência dos dados de perfil

    // Redirecionar para uma página de confirmação ou para a página inicial do perfil
        NavigationManager.NavigateTo("/profile");
    }

    public class ProfileModel
    {
        [Required(ErrorMessage = "The full name is required.")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "The email address is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "The phone number is required.")]
        public string PhoneNumber { get; set; }
    }
}